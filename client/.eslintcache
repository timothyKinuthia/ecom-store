[{"C:\\Users\\hp\\ecommerce\\client\\src\\index.js":"1","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\index.js":"2","C:\\Users\\hp\\ecommerce\\client\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\ecommerce\\client\\src\\firebase.js":"4","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js":"5","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\Password.js":"6","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"7","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"8","C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\UserRoutes.js":"9","C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\Header.js":"10","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\createUpdateUser.js":"11","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\product.js":"12","C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js":"13","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js":"14","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"15","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js":"16","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\FileUpload.js":"17","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\userReducer.js":"18","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\History.js":"19","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js":"20","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\sub.js":"21","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\CategoryForm.js":"22","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\AdminCard.js":"23","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Home.js":"24","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductCard.js":"25","C:\\Users\\hp\\ecommerce\\client\\src\\App.js":"26","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js":"27","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\auth.js":"28","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\Wishlist.js":"29","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js":"30","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"31","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js":"32","C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js":"33","C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\UserNav.js":"34","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js":"35","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\Login.js":"36","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\category.js":"37","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\Register.js":"38","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\LoadingCard.js":"39","C:\\Users\\hp\\ecommerce\\client\\src\\components\\home\\NewArrivals.js":"40","C:\\Users\\hp\\ecommerce\\client\\src\\components\\home\\BestSellers.js":"41","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js":"42","C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\AdminNav.js":"43","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Product.js":"44","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\SingleProduct.js":"45","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductListItems.js":"46","C:\\Users\\hp\\ecommerce\\client\\src\\components\\modal\\RatingModal.js":"47","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\rating.js":"48","C:\\Users\\hp\\ecommerce\\client\\src\\components\\category\\CategoryList.js":"49","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\category\\CategoryHome.js":"50","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\sub\\SubHome.js":"51","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\searchReducer.js":"52","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\Search.js":"53","C:\\Users\\hp\\ecommerce\\client\\src\\components\\sub\\SubList.js":"54","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Shop.js":"55","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\Star.js":"56","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\cartReducer.js":"57","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Cart.js":"58","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.js":"59","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\drawerReducer.js":"60","C:\\Users\\hp\\ecommerce\\client\\src\\components\\drawer\\SideDrawer.js":"61","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Checkout.js":"62","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\user.js":"63","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js":"64","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\coupon.js":"65","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\couponReducer.js":"66","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Payment.js":"67","C:\\Users\\hp\\ecommerce\\client\\src\\components\\StripeCheckout.js":"68","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\stripe.js":"69","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.js":"70","C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Invoice.js":"71","C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Orders.js":"72","C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Order.js":"73","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\admin.js":"74"},{"size":866,"mtime":1606513950633,"results":"75","hashOfConfig":"76"},{"size":438,"mtime":1608255827851,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1606145816977,"results":"78","hashOfConfig":"76"},{"size":684,"mtime":1606217118440,"results":"79","hashOfConfig":"76"},{"size":2877,"mtime":1606469448141,"results":"80","hashOfConfig":"76"},{"size":1687,"mtime":1606463286697,"results":"81","hashOfConfig":"76"},{"size":2881,"mtime":1606649690680,"results":"82","hashOfConfig":"76"},{"size":3699,"mtime":1606569274023,"results":"83","hashOfConfig":"76"},{"size":397,"mtime":1606469055855,"results":"84","hashOfConfig":"76"},{"size":3204,"mtime":1623420952242,"results":"85","hashOfConfig":"76"},{"size":253,"mtime":1606406765915,"results":"86","hashOfConfig":"76"},{"size":1475,"mtime":1623575199081,"results":"87","hashOfConfig":"76"},{"size":666,"mtime":1606459063066,"results":"88","hashOfConfig":"76"},{"size":4316,"mtime":1606897774683,"results":"89","hashOfConfig":"76"},{"size":5434,"mtime":1607090526750,"results":"90","hashOfConfig":"76"},{"size":4511,"mtime":1607079444366,"results":"91","hashOfConfig":"76"},{"size":1772,"mtime":1607098860327,"results":"92","hashOfConfig":"76"},{"size":352,"mtime":1606288003200,"results":"93","hashOfConfig":"76"},{"size":2862,"mtime":1608627502340,"results":"94","hashOfConfig":"76"},{"size":4152,"mtime":1623402694821,"results":"95","hashOfConfig":"76"},{"size":781,"mtime":1623575257405,"results":"96","hashOfConfig":"76"},{"size":701,"mtime":1606569411207,"results":"97","hashOfConfig":"76"},{"size":1211,"mtime":1607103595572,"results":"98","hashOfConfig":"76"},{"size":2049,"mtime":1623577837544,"results":"99","hashOfConfig":"76"},{"size":2872,"mtime":1623421813528,"results":"100","hashOfConfig":"76"},{"size":5073,"mtime":1623577684477,"results":"101","hashOfConfig":"76"},{"size":1721,"mtime":1606469399194,"results":"102","hashOfConfig":"76"},{"size":418,"mtime":1623575070630,"results":"103","hashOfConfig":"76"},{"size":1438,"mtime":1608722759252,"results":"104","hashOfConfig":"76"},{"size":1596,"mtime":1608648268487,"results":"105","hashOfConfig":"76"},{"size":1985,"mtime":1606569283897,"results":"106","hashOfConfig":"76"},{"size":2199,"mtime":1606989416532,"results":"107","hashOfConfig":"76"},{"size":745,"mtime":1606469208941,"results":"108","hashOfConfig":"76"},{"size":695,"mtime":1606460283755,"results":"109","hashOfConfig":"76"},{"size":420,"mtime":1606569543735,"results":"110","hashOfConfig":"76"},{"size":4719,"mtime":1607326634229,"results":"111","hashOfConfig":"76"},{"size":949,"mtime":1623575107632,"results":"112","hashOfConfig":"76"},{"size":1707,"mtime":1606469354508,"results":"113","hashOfConfig":"76"},{"size":517,"mtime":1607434760752,"results":"114","hashOfConfig":"76"},{"size":1859,"mtime":1607176410848,"results":"115","hashOfConfig":"76"},{"size":1855,"mtime":1607176481824,"results":"116","hashOfConfig":"76"},{"size":4797,"mtime":1606589504462,"results":"117","hashOfConfig":"76"},{"size":1328,"mtime":1606655312921,"results":"118","hashOfConfig":"76"},{"size":2172,"mtime":1623328935070,"results":"119","hashOfConfig":"76"},{"size":4404,"mtime":1608720684033,"results":"120","hashOfConfig":"76"},{"size":2110,"mtime":1607194502436,"results":"121","hashOfConfig":"76"},{"size":1329,"mtime":1607328038399,"results":"122","hashOfConfig":"76"},{"size":752,"mtime":1607437207009,"results":"123","hashOfConfig":"76"},{"size":1237,"mtime":1607499844078,"results":"124","hashOfConfig":"76"},{"size":1539,"mtime":1607605749519,"results":"125","hashOfConfig":"76"},{"size":1516,"mtime":1607606170646,"results":"126","hashOfConfig":"76"},{"size":320,"mtime":1607609855252,"results":"127","hashOfConfig":"76"},{"size":1027,"mtime":1607616985929,"results":"128","hashOfConfig":"76"},{"size":1159,"mtime":1607604973095,"results":"129","hashOfConfig":"76"},{"size":12337,"mtime":1607956333018,"results":"130","hashOfConfig":"76"},{"size":418,"mtime":1607776150764,"results":"131","hashOfConfig":"76"},{"size":482,"mtime":1607843974839,"results":"132","hashOfConfig":"76"},{"size":2814,"mtime":1607932584685,"results":"133","hashOfConfig":"76"},{"size":3903,"mtime":1607930265720,"results":"134","hashOfConfig":"76"},{"size":289,"mtime":1607873576197,"results":"135","hashOfConfig":"76"},{"size":1942,"mtime":1607929243309,"results":"136","hashOfConfig":"76"},{"size":4592,"mtime":1608279271434,"results":"137","hashOfConfig":"76"},{"size":1555,"mtime":1623568641475,"results":"138","hashOfConfig":"76"},{"size":4101,"mtime":1608021254182,"results":"139","hashOfConfig":"76"},{"size":453,"mtime":1623575141394,"results":"140","hashOfConfig":"76"},{"size":208,"mtime":1608255592945,"results":"141","hashOfConfig":"76"},{"size":760,"mtime":1608262752874,"results":"142","hashOfConfig":"76"},{"size":5238,"mtime":1608286632470,"results":"143","hashOfConfig":"76"},{"size":232,"mtime":1623575226535,"results":"144","hashOfConfig":"76"},{"size":1146,"mtime":1608633912624,"results":"145","hashOfConfig":"76"},{"size":3029,"mtime":1608626806491,"results":"146","hashOfConfig":"76"},{"size":1516,"mtime":1608651576920,"results":"147","hashOfConfig":"76"},{"size":1747,"mtime":1608651135420,"results":"148","hashOfConfig":"76"},{"size":399,"mtime":1623575053540,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"zzpnn",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"166"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"166"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"166"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"177"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"177"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"158"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"177"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"166"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"177"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"166"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"177"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"205"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"177"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"163"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"166"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"163"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"205"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"166"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"177"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"177"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"C:\\Users\\hp\\ecommerce\\client\\src\\index.js",[],["332","333"],"C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\index.js",[],["334","335"],"C:\\Users\\hp\\ecommerce\\client\\src\\reportWebVitals.js",[],["336","337"],"C:\\Users\\hp\\ecommerce\\client\\src\\firebase.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\RegisterComplete.js",[],["338","339"],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\Password.js",[],["340","341"],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["342"],"import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col } from 'antd';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { Spin, Select } from \"antd\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  getSub,\r\n  updateSub,\r\n} from \"../../../functions/sub.js\";\r\nimport {getCategories} from '../../../functions/category';\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SubUpdate = ({match, history}) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    //const [category, setCategory] = useState('');\r\n    const [parent, setParent] = useState('');\r\n\r\n  \r\n  \r\n    const { user } = useSelector((state) => ({ ...state }));\r\n  \r\n    useEffect(() => {\r\n      loadCategories();\r\n      loadSub();\r\n        \r\n    }, []);\r\n\r\n  \r\n    const loadCategories = () => {\r\n      return getCategories().then((res) => setCategories(res.data))\r\n    };\r\n\r\n    const loadSub = () => {\r\n      return getSub(match.params.slug, user.token).then((res) => {\r\n          setName(res.data.sub.name);\r\n          setParent(res.data.sub.parent)\r\n        });\r\n      };\r\n\r\n    const handleChange = val => {\r\n      setParent(val);\r\n    }\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n    \r\n        updateSub(match.params.slug, { name, parent }, user.token)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            loadCategories();\r\n            toast.success(`${name} is updated`);\r\n            setName(\"\");\r\n            history.push('/admin/sub')\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n            setLoading(false);\r\n            if (err.response.status === 400) toast.error(err.response.data.error);\r\n          });\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <AdminNav/>\r\n                </Col>\r\n                <Col span={20} >\r\n                    {loading ? <Spin size=\"default\" /> : <h4>Update sub category</h4>}\r\n                    <Select onChange={handleChange} size=\"middle\" style={{ width: 180 }}>\r\n                        {categories.length > 0 && categories.map(cat => (\r\n                            <Option key={cat._id} value={cat._id} >{cat.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                    <br />\r\n                    <br/>\r\n                    <CategoryForm\r\n                    name={name}\r\n                    handleSubmit={handleSubmit}\r\n                    setName={setName}\r\n                    loading={loading}\r\n                    />\r\n                </Col>\r\n            </Row>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SubUpdate","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\UserRoutes.js",[],["343","344"],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\Header.js",[],["345","346"],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\createUpdateUser.js",[],["347","348"],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\product.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\ProductCreateForm.js",["349","350","351","352"],"import React from \"react\";\r\nimport { Button, Input, Select, Divider } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = ({\r\n  setValue,\r\n  handleSubmit,\r\n  handleChange,\r\n  values,\r\n  handleCategoryChange,\r\n  subOptions\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    color,\r\n    colors,\r\n    brand,\r\n    categories,\r\n    images,\r\n    quantity,\r\n    price,\r\n    brands,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginRight: \"2rem\" }}>\r\n      <>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ maxWidth: 750 }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"description\">Description</label>\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ maxWidth: 750 }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"price\">Price</label>\r\n        <br />\r\n        <Input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          value={price}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ maxWidth: 750 }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Shipping</label>\r\n        <br />\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"select\"\r\n          name=\"shipping\"\r\n          onChange={(val) => setValue({ ...values, shipping: val })}\r\n        >\r\n          <Option value=\"Yes\">Yes</Option>\r\n          <Option value=\"No\">No</Option>\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"quantity\">Quantity</label>\r\n        <br />\r\n        <Input\r\n          type=\"number\"\r\n          id=\"quantity\"\r\n          name=\"quantity\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ maxWidth: 750 }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Color</label>\r\n        <br />\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"select color\"\r\n          name=\"color\"\r\n          onChange={(val) => setValue({ ...values, color: val })}\r\n        >\r\n          {colors.map((color, index) => (\r\n            <Option key={index} value={color}>\r\n              {color}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Brand</label>\r\n        <br />\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"select brand\"\r\n          name=\"brand\"\r\n          onChange={(val) => setValue({ ...values, brand: val })}\r\n        >\r\n          {brands.map((brand, index) => (\r\n            <Option key={index} value={brand}>\r\n              {brand}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <label>Category</label>\r\n      <br />\r\n      <Select\r\n        placeholder=\"Please Select\"\r\n        onChange={handleCategoryChange}\r\n        size=\"middle\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        {categories.length > 0 &&\r\n          categories.map((cat) => (\r\n            <Option key={cat._id} value={cat._id}>\r\n              {cat.name}\r\n            </Option>\r\n          ))}\r\n      </Select>\r\n      <Divider/>\r\n      {category && (\r\n            <>\r\n              <label>Sub Categories</label>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"please select\"\r\n                value={subs}\r\n                onChange={val => setValue({ ...values, subs: val })}\r\n              >\r\n                {subOptions.length && subOptions.map(sub => (\r\n                  <Option key={sub._id} value={sub._id}>{sub.name}</Option>\r\n                ))}\r\n              </Select>\r\n            </>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" htmlType=\"submit\" block>\r\n        Save\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["353","354","355","356"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Spin, Avatar, Badge } from \"antd\";\r\nimport { Divider, Typography } from \"antd\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { createProduct, updateProduct } from \"../../../functions/product\";\r\nimport { getProduct } from \"../../../functions/product\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n  brands: [\"Apple\", \"Sumsung\", \"Microsoft\", \"Lenovo\", \"Asus\"],\r\n  brand: \"\",\r\n  color: \"\",\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  const [values, setValue] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [arrayOfSubIds, setArrayOfSubIds] = useState([]);\r\n  const [categoryValue, setCategoryValue] = useState('');\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug)\r\n      .then((res) => {\r\n        setValue({ ...values, ...res.data.product });\r\n        getCategorySubs(res.data.product.category._id).then((res) => {\r\n          setSubOptions(res.data.subs);\r\n          const arr = [];\r\n          res.data.subs.map((s) => arr.push(s._id));\r\n          setArrayOfSubIds((prev) => arr);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const loadCategories = () => {\r\n    getCategories()\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setLoading(true);\r\n\r\n    updateProduct(slug, values, user.token).then(res => {\r\n      setLoading(false);\r\n      toast.success(`${res.data.product.title} is updated`);\r\n      history.push('/admin/products')\r\n    }).catch(err => {\r\n      setLoading(false)\r\n      console.log(err);\r\n      toast.error(err.response.data.error.message)\r\n    })\r\n\r\n    values.sub = arrayOfSubIds;\r\n    values.category = categoryValue ? categoryValue : values.category\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    setValue({ ...values, [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = (val) => {\r\n    setValue({ ...values, subs: [] });\r\n\r\n    setCategoryValue(val);\r\n    \r\n    getCategorySubs(val)\r\n      .then((res) => {\r\n        setSubOptions(res.data.subs);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    if (values.category._id === val) {\r\n      loadProduct();\r\n    }\r\n    \r\n    setArrayOfSubIds([]);\r\n    \r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/api/removeimage\",\r\n        { public_id: id },\r\n        {\r\n          headers: {\r\n            authtoken: user ? user.token : \"\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        const { images } = values;\r\n        const filteredImages = images.filter((img) => img.public_id !== id);\r\n        setValue({ ...values, images: filteredImages });\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(err.resonse.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={2} xs={12}>\r\n        <AdminNav />\r\n      </Grid>\r\n      <Grid item sm={10} xs={12}>\r\n        <Title style={{ color: \"teal\" }} level={4}>\r\n          Update Product\r\n        </Title>\r\n        {values.images.length > 0 &&\r\n          values.images.map((img) => (\r\n            <Badge\r\n              count=\"X\"\r\n              key={img.public_id}\r\n              onClick={() => handleRemove(img.public_id)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <Avatar\r\n                src={img.url}\r\n                size={60}\r\n                shape=\"square\"\r\n                style={{ marginLeft: \"1rem\" }}\r\n              />\r\n            </Badge>\r\n          ))}\r\n        <div className=\"p-3\">\r\n        <FileUpload\r\n            values={values}\r\n            setValue={setValue}\r\n            loading={loading}\r\n            setLoading={setLoading}\r\n          />\r\n        </div>\r\n        <br/>\r\n        <div className=\"p-3\">\r\n          <ProductUpdateForm\r\n            values={values}\r\n            handleChange={handleChange}\r\n            handleSubmit={handleSubmit}\r\n            setValue={setValue}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            categories={categories}\r\n            arrayOfSubIds={arrayOfSubIds}\r\n            setArrayOfSubIds={setArrayOfSubIds}\r\n            categoryValue={categoryValue}\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\ProductUpdateForm.js",["357","358"],"/* eslint-disable react/jsx-no-duplicate-props */\r\nimport React from \"react\";\r\nimport { Button, Input, Select, Divider } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n  setValue,\r\n  handleSubmit,\r\n  handleChange,\r\n  handleCategoryChange,\r\n  values,\r\n  subOptions,\r\n  categories,\r\n  arrayOfSubIds,\r\n  setArrayOfSubIds,\r\n  categoryValue\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    color,\r\n    colors,\r\n    brand,\r\n    images,\r\n    quantity,\r\n    price,\r\n    brands,\r\n  } = values;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginRight: \"2rem\" }}>\r\n      <>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          value={title}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"description\">Description</label>\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={description}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"price\">Price</label>\r\n        <br />\r\n        <Input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          value={price}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Shipping</label>\r\n        <br />\r\n        <Select\r\n          defaultValue={shipping}\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"select\"\r\n          defaultValue={shipping === 'Yes' ? 'Yes' : 'No'}\r\n          name=\"shipping\"\r\n          onChange={(val) => setValue({ ...values, shipping: val })}\r\n        >\r\n          <Option value=\"Yes\">Yes</Option>\r\n          <Option value=\"No\">No</Option>\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label htmlFor=\"quantity\">Quantity</label>\r\n        <br />\r\n        <Input\r\n          type=\"number\"\r\n          id=\"quantity\"\r\n          name=\"quantity\"\r\n          value={quantity}\r\n          onChange={handleChange}\r\n          size=\"large\"\r\n          style={{ width: \"100%\" }}\r\n        />\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Color</label>\r\n        <br />\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          value={color}\r\n          name=\"color\"\r\n          onChange={(val) => setValue({ ...values, color: val })}\r\n        >\r\n          {colors.map((color, index) => (\r\n            <Option key={index} value={color}>\r\n              {color}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <>\r\n        <label>Brand</label>\r\n        <br />\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          value={brand}\r\n          name=\"brand\"\r\n          onChange={(val) => setValue({ ...values, brand: val })}\r\n        >\r\n          {brands.map((brand, index) => (\r\n            <Option key={index} value={brand}>\r\n              {brand}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </>\r\n      <Divider />\r\n      <label>Category</label>\r\n      <br />\r\n      <Select\r\n        onChange={handleCategoryChange}\r\n        size=\"middle\"\r\n        value={categoryValue ? categoryValue : category._id}\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        {categories.length > 0 &&\r\n          categories.map((cat) => (\r\n            <Option key={cat._id} value={cat._id} >\r\n              {cat.name}\r\n            </Option>\r\n          ))}\r\n      </Select>\r\n      <Divider/>\r\n      {category && (\r\n            <>\r\n              <label>Sub Categories</label>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ width: \"100%\" }}\r\n                value={arrayOfSubIds}\r\n                placeholder=\"please select\"\r\n                onChange={val => setArrayOfSubIds(val)}\r\n              >\r\n                {subOptions.length && subOptions.map(sub => (\r\n                  <Option key={sub._id} value={sub._id}>{sub.name}</Option>\r\n                ))}\r\n              </Select>\r\n            </>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <Button type=\"primary\" htmlType=\"submit\" block>\r\n        Save\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\FileUpload.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\userReducer.js",[],["359","360"],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\History.js",["361"],"import React, { useEffect, useState } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\r\nimport {\r\n  PDFDownloadLink,\r\n} from \"@react-pdf/renderer\";\r\nimport Invoice from '../../components/order/Invoice';\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () =>\r\n    getUserOrders(user.token).then((res) => {\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {order.products.map((p, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <b>{p.product.title}</b>\r\n            </td>\r\n            <td>{p.product.price}</td>\r\n            <td>{p.product.brand}</td>\r\n            <td>{p.color}</td>\r\n            <td>{p.count}</td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={\r\n        <Invoice order={order}/>\r\n      }\r\n      fileName='invoice.pdf'\r\n      className=\"btn btn-sm btn-block\"\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n  const showEachOrders = () =>\r\n    orders.map((order, i) => (\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"col\">{showDownloadLink(order)} </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"colmd-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col text-center\">\r\n          <h4>\r\n            {orders.length ? \"User purchase orders\" : \"No purchase orders\"}{\" \"}\r\n          </h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\ProductCreate.js",["362","363"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Divider, Typography } from \"antd\";\r\nimport { createProduct } from \"../../../functions/product\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n//imports\r\nimport ProductCreateForm from \"../../../components/forms/ProductCreateForm\";\r\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\r\nimport FileUpload from \"../../../components/forms/FileUpload\";\r\nimport { Spin, Avatar, Badge } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  subs: [],\r\n  shipping: \"\",\r\n  quantity: \"\",\r\n  images: [],\r\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\r\n  brands: [\"Apple\", \"Sumsung\", \"Microsoft\", \"Lenovo\", \"Asus\", \"HP\", \"Dell\"],\r\n  brand: \"\",\r\n  color: \"\",\r\n  categories: [],\r\n};\r\n\r\nconst ProductCreate = () => {\r\n  const [values, setValue] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () => {\r\n    getCategories().then((res) => {\r\n      setValue({ ...values, categories: res.data });\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        window.alert(`\"${res.data.product.title}\" is created`);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    setValue({ ...values, [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = (val) => {\r\n    setValue({ ...values, subs: [], category: val });\r\n    getCategorySubs(val)\r\n      .then((res) => {\r\n        setSubOptions(res.data.subs);\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/api/removeimage\",\r\n        { public_id: id },\r\n        {\r\n          headers: {\r\n            authtoken: user ? user.token : \"\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        const { images } = values;\r\n        const filteredImages = images.filter((img) => img.public_id !== id);\r\n        setValue({ ...values, images: filteredImages });\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(err.resonse.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sm={2} xs={12}>\r\n        <AdminNav />\r\n      </Grid>\r\n      <Grid item sm={10} xs={12}>\r\n        {/* <h4>Product Create</h4> */}\r\n        <Title style={{ color: \"teal\" }} level={4}>\r\n          Create Product\r\n        </Title>\r\n        {values.images.length > 0 &&\r\n          values.images.map((img) => (\r\n            <Badge\r\n              count=\"X\"\r\n              key={img.public_id}\r\n              onClick={() => handleRemove(img.public_id)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <Avatar\r\n                src={img.url}\r\n                size={60}\r\n                shape=\"square\"\r\n                style={{ marginLeft: \"1rem\" }}\r\n              />\r\n            </Badge>\r\n          ))}\r\n        <div className=\"p-3\">\r\n          <FileUpload\r\n            values={values}\r\n            setValue={setValue}\r\n            loading={loading}\r\n            setLoading={setLoading}\r\n          />\r\n          <br />\r\n        </div>\r\n        <Divider />\r\n        <ProductCreateForm\r\n          setValue={setValue}\r\n          handleSubmit={handleSubmit}\r\n          handleChange={handleChange}\r\n          handleCategoryChange={handleCategoryChange}\r\n          values={values}\r\n          subOptions={subOptions}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n",["364","365"],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\sub.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\CategoryForm.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\AdminCard.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Home.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductCard.js",["366","367","368"],"import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport _ from 'lodash';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, Tooltip } from \"antd\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { showAverage } from \"../../functions/rating\";\r\n\r\nimport laptop from \"../../images/surface-pro-platnium.png\";\r\n\r\nconst { Meta } = Card;\r\n\r\nconst ProductCard = ({ product }) => {\r\n\r\n  const [tooltip, setTooltip] = useState('Click to add')\r\n\r\n  const { title, description, images, slug, price } = product;\r\n\r\n  const { user, cart } = useSelector(state => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n // const newPrice = () => { return <p style={{ color: 'teal' }}>{' '}{price} </p> }\r\n  \r\n  const handleAddToCart = () => {\r\n    //create cart array\r\n\r\n    let cart = [];\r\n\r\n    if (window !== 'undefined') {\r\n      //check if the cart is in local storage\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      //push new product to cart \r\n      cart.push({\r\n        ...product,\r\n        count: 1\r\n      })\r\n\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      localStorage.setItem('cart', JSON.stringify(unique));\r\n\r\n      setTooltip('Added')\r\n\r\n      //dispatch to global state\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: unique\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_VISIBLE',\r\n        payload: true\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <Grid item lg={4} md={4} sm={6} xs={12}>\r\n      {product && product.ratings && product.ratings.length > 0 ? (\r\n        showAverage(product)\r\n      ) : (\r\n        <div className=\"text-center pt-1 pb-3\">No rating yet</div>\r\n      )}\r\n      <Card\r\n        style={{ maxWidth: 350}}\r\n        cover={\r\n          <img\r\n            src={images && images.length ? images[0].url : laptop}\r\n            alt={title}\r\n            style={{\r\n              height: 320,\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n              margin: \"auto\",\r\n            }}\r\n          />\r\n        }\r\n        actions={[\r\n          <Link to={`/product/${slug}`}>\r\n            <EyeOutlined /><br/>View the Product\r\n          </Link>,\r\n          <Tooltip title={tooltip}>\r\n            <a onClick={handleAddToCart}  disabled={product.quantity < 1}>\r\n            <ShoppingCartOutlined /><br/>{product.quantity < 1 ? 'Out of stock' : 'Add to cart'}\r\n            </a>\r\n          </Tooltip>,\r\n        ]}\r\n      >\r\n        <Meta\r\n          title={<p>{title}<br/><span style={{color: 'red'}}>${price.toFixed(2)}</span> </p> }\r\n          description={`${description && description.substring(0, 40)}...`}\r\n          className=\"m-2\"\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\App.js",["369","370"],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\ForgotPassword.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\auth.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\user\\Wishlist.js",["371","372"],"import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { getWishlist, removeWishlist } from \"../../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {DeleteOutlined} from '@ant-design/icons'\r\n\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadWishlist();\r\n  }, []);\r\n\r\n  const loadWishlist = () => {\r\n    if (user.token) {\r\n      getWishlist(user.token).then((res) => {\r\n        setWishlist(res.data.wishlist);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemove = (productId) => {\r\n    removeWishlist(productId, user.token).then((res) => {\r\n      loadWishlist();\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"colmd-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Wishlist</h4>\r\n\r\n          {wishlist.map((p) => (\r\n            <div key={p._id} className='alert alert-primary'>\r\n                <Link to={`/product/${p.slug}`}>{p.title}</Link>\r\n                <span onClick={() => handleRemove(p._id)} className='btn btn-sm float-right'><DeleteOutlined/></span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\AdminDashboard.js",["373","374"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../components/nav/AdminNav';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Divider } from '@material-ui/core';\r\nimport { getAllOrders, changeStatus } from '../../functions/admin';\r\nimport { toast } from 'react-toastify';\r\nimport Orders from '../../components/order/Orders';\r\n\r\nconst AdminDashboard = () => {\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    const { user } = useSelector(state => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n    }, [])\r\n\r\n    const loadOrders = () => {\r\n        getAllOrders(user.token).then(res => {\r\n            setOrders(res.data)\r\n        })\r\n    }\r\n\r\n    const handleStatusChange = (orderId, orderStatus) => {\r\n        changeStatus(orderId, orderStatus, user.token).then(res => {\r\n            toast.success('Status Updated');\r\n            loadOrders();\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item lg={2} md={2} sm={3} xs={12}>\r\n                <AdminNav/>\r\n            </Grid>\r\n            <Grid item container direction=\"column\" lg={10} md={10} sm={9} xs={12} spacing={3}>\r\n                <Grid item>\r\n                    <h4>All Products</h4>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid item container spacing={2}>\r\n                    <Orders orders={orders} handleStatusChange={handleStatusChange} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    ) \r\n}\r\n\r\nexport default AdminDashboard\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["375"],"import React, { useState, useEffect } from \"react\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  getCategory,\r\n  updateCategory\r\n} from \"../../../functions/category\";\r\nimport { Spin } from \"antd\";\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\n\r\nconst CategoryUpdate = ({history, match}) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n    useEffect(() => {\r\n      loadCategory();\r\n  }, []);\r\n    \r\n  const loadCategory = () => {\r\n      getCategory(match.params.slug, user.token).then(res => {\r\n          setName(res.data.category.name);\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n//   const loadCategories = () => {\r\n//     return getCategories().then((res) => setCategories(res.data));\r\n//   };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setLoading(true);\r\n\r\n    updateCategory(match.params.slug, { name }, user.token)\r\n        .then((res) => {\r\n        setLoading(false);\r\n          setName(res.data.category.name);\r\n          loadCategory();\r\n          toast.success(`${name} is created`);\r\n          history.push('/admin/category')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data.error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"colmd-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col\">\r\n          {loading ? <Spin size=\"default\" /> : <h4>Update Category</h4>}\r\n          <CategoryForm name={name} handleSubmit={handleSubmit} setName={setName} loading={loading}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\UserNav.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\LocalSearch.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\Login.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\category.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\auth\\Register.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\LoadingCard.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\home\\NewArrivals.js",["376"],"import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Pagination, Col, Row } from 'antd';\r\nimport ProductCard from '../cards/ProductCard';\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport LoadingCard from '../cards/LoadingCard';\r\n\r\n\r\nconst NewArrivals = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then(res => {\r\n            setProductsCount(res.data.total)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    //SORT, ORDER, LIMIT\r\n    const loadProducts = () => {\r\n        setLoading(true)\r\n        getProducts('createdAt', 'desc', page).then(res => {\r\n            setLoading(false);\r\n            setProducts(res.data.products);\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<LoadingCard count={3} />) :\r\n            (<Grid container spacing={2} style={{marginLeft: '1rem', marginRight: '2rem'}} justify=\"space-around\" wrap=\"wrap\">\r\n                {products.length > 0 && products.map(product => (\r\n                    <ProductCard key={product._id} product={product} />\r\n                ))}\r\n            </Grid>)}\r\n            <Row style={{padding: '2rem 0'}} justify=\"center\">\r\n                <Col span={12} offset={6}>\r\n                    <Pagination current={page} total={(productsCount/3) * 10} onChange={val => setPage(val)} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewArrivals","C:\\Users\\hp\\ecommerce\\client\\src\\components\\home\\BestSellers.js",["377"],"import React, {useState, useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProductCard from '../cards/ProductCard';\r\nimport LoadingCard from '../cards/LoadingCard';\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport {Pagination, Col, Row } from 'antd';\r\n\r\n\r\nconst BestSellers = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [productsCount, setProductsCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, [page]);\r\n\r\n    useEffect(() => {\r\n        getProductsCount().then(res => {\r\n            setProductsCount(res.data.total)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    //SORT, ORDER, LIMIT\r\n    const loadProducts = () => {\r\n        setLoading(true)\r\n        getProducts('sold', 'desc', page).then(res => {\r\n            setLoading(false);\r\n            setProducts(res.data.products);\r\n        }).catch(err => {\r\n            setLoading(false);\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading ? (<LoadingCard count={3} />) :\r\n            (<Grid container spacing={2} justify=\"space-around\" style={{marginLeft: '1rem', marginRight: '2rem'}} wrap=\"wrap\">\r\n                {products.length > 0 && products.map(product => (\r\n                    <ProductCard key={product._id} product={product} />\r\n                ))}\r\n            </Grid>)}\r\n            <Row style={{padding: '2rem 0'}} justify=\"center\">\r\n                <Col span={12} offset={6}>\r\n                    <Pagination current={page} total={(productsCount/3) * 10} onChange={val => setPage(val)} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BestSellers","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\sub\\SubCreate.js",["378"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Row, Col } from 'antd';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport { Spin, Select } from \"antd\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  createSub,\r\n  getSub,\r\n  removeSub,\r\n  getSubs\r\n} from \"../../../functions/sub.js\";\r\nimport {getCategories} from '../../../functions/category';\r\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\r\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst SubCreate = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [subs, setSubs] = useState([]);\r\n    const [category, setCategory] = useState('');\r\n  \r\n    //searching/filtering\r\n    //step 1\r\n    const [keyword, setKeyword] = useState(\"\");\r\n  \r\n    const { user } = useSelector((state) => ({ ...state }));\r\n  \r\n    useEffect(() => {\r\n        loadCategories();\r\n        loadSubs();\r\n    }, []);\r\n  \r\n    const loadCategories = () => {\r\n      return getCategories().then((res) => setCategories(res.data));\r\n    };\r\n\r\n    const loadSubs = () => {\r\n        return getSubs().then((res) => setSubs(res.data));\r\n      };\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n    \r\n        createSub({ name, parent: category }, user.token)\r\n          .then((res) => {\r\n            setLoading(false);\r\n            setName(\"\");\r\n            loadCategories();\r\n            toast.success(`${name} is created`);\r\n            loadSubs();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n            setLoading(false);\r\n            if (err.response.status === 400) toast.error(err.response.data.error);\r\n          });\r\n    };\r\n\r\n    const handleChange = val => {\r\n        setCategory(val)\r\n    }\r\n    \r\n    const handleRemove = (slug) => {\r\n        if (window.confirm(\"Delete\")) {\r\n          setLoading(true);\r\n          removeSub(slug, user.token)\r\n            .then((res) => {\r\n              setLoading(false);\r\n              toast.warning(`successfully deleted ${slug}`);\r\n                loadSubs();\r\n            })\r\n            .catch((err) => {\r\n              setLoading(false);\r\n              if (err.response.status === 400) toast.error(err.response.data.error);\r\n            });\r\n        }\r\n      };\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <AdminNav/>\r\n                </Col>\r\n                <Col span={20} >\r\n                    {loading ? <Spin size=\"default\" /> : <h4>Create sub category</h4>}\r\n                    <Select placeholder=\"Please Select\" onChange={handleChange} size=\"middle\" style={{ width: 180 }}>\r\n                        {categories.length > 0 && categories.map(cat => (\r\n                            <Option key={cat._id} value={cat._id}>{cat.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                    <br />\r\n                    <br/>\r\n                    <CategoryForm\r\n                    name={name}\r\n                    handleSubmit={handleSubmit}\r\n                    setName={setName}\r\n                    loading={loading}\r\n                    />\r\n                    {/* step 2 */}\r\n                    <LocalSearch setKeyword={setKeyword} keyword={keyword}/>\r\n                    <br/>\r\n                    <br/>\r\n                    {subs.filter(sub => sub.name.toLowerCase().includes(keyword)).map((sub) => (\r\n                    <div className=\"alert alert-primary\" key={sub._id}>\r\n                        {sub.name}{\" \"}\r\n                        <span\r\n                        onClick={() => handleRemove(sub.slug)}\r\n                        className=\"btn btn-sm float-right\"\r\n                        >\r\n                        <Tooltip title=\"Delete Category\" color=\"orange\">\r\n                            <DeleteOutlined className=\"text-info\" />\r\n                        </Tooltip>\r\n                        </span>\r\n                        <Link to={`/admin/sub/${sub.slug}`}>\r\n                        <span className=\"btn btn-sm float-right\">\r\n                            <Tooltip title=\"Edit Category\" color=\"cyan\">\r\n                            <EditOutlined className=\"text-info\" />\r\n                            </Tooltip>\r\n                        </span>\r\n                        </Link>\r\n                    </div>\r\n                    ))}\r\n                </Col>\r\n            </Row>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SubCreate\r\n\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\nav\\AdminNav.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Product.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\SingleProduct.js",["379","380","381"],"import React, {useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { Col, Card, Tabs, Tooltip } from \"antd\";\r\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport laptop from \"../../images/laptop.png\";\r\nimport ProductListItems from \"./ProductListItems\";\r\nimport StarRating from \"react-star-ratings\";\r\nimport RatingModal from \"../modal/RatingModal\";\r\nimport { showAverage } from \"../../functions/rating\";\r\nimport { addWishlist } from '../../functions/user';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n\r\n  const [tooltip, setTooltip] = useState('Click to add');\r\n\r\n  const { user, cart } = useSelector(state => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { title, images, description, _id } = product;\r\n\r\n  const handleAddToCart = () => {\r\n    //create cart array\r\n\r\n    let cart = [];\r\n\r\n    if (window !== 'undefined') {\r\n      //check if the cart is in local storage\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'))\r\n      }\r\n\r\n      //push new product to cart \r\n      cart.push({\r\n        ...product,\r\n        count: 1\r\n      })\r\n\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n\r\n      localStorage.setItem('cart', JSON.stringify(unique));\r\n\r\n      setTooltip('Added')\r\n\r\n      //dispatch to global state\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: unique\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_VISIBLE',\r\n        payload: true\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAddToWishlist = evt => {\r\n    evt.preventDefault();\r\n    addWishlist(product._id, user.token).then(res => {\r\n      toast.success('ADDED TO WISHLIST');\r\n      history.push('/user/wishlist')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Col md={{ span: 14 }} sm={{ span: 24 }} xs={{ span: 24 }}>\r\n        {images && images.length ? (\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images &&\r\n              images.map((image) => (\r\n                <img src={image.url} alt={title} key={image.public_id} />\r\n              ))}\r\n          </Carousel>\r\n        ) : (\r\n          <Card\r\n            cover={\r\n              <img\r\n                src={laptop}\r\n                alt=\"laptop\"\r\n                style={{ height: 250, objectFit: \"cover\" }}\r\n                className=\"mb-3 card-image\"\r\n              />\r\n            }\r\n          ></Card>\r\n        )}\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"description\" key=\"1\">\r\n            {description && description}\r\n          </TabPane>\r\n          <TabPane tab=\"More\" key=\"2\">\r\n            For product information contact us on xxxx-xxx-xxx\r\n          </TabPane>\r\n        </Tabs>\r\n      </Col>\r\n      <Col\r\n        md={{ span: 10 }}\r\n        sm={{ span: 24 }}\r\n        style={{ textAlign: \"center\" }}\r\n        xs={{ span: 24 }}\r\n      >\r\n        <h1 className=\"bg-info p-3\">{title}</h1>\r\n\r\n        {product && product.ratings && product.ratings.length > 0 ? (\r\n          showAverage(product)\r\n        ) : (\r\n          <div className=\"text-center pt-1 pb-3\">No rating yet</div>\r\n        )}\r\n\r\n        <Card\r\n          style={{ maxWidth: 450, marginLeft: \"2rem\" }}\r\n          actions={[\r\n            <>\r\n              <Tooltip title={tooltip}>\r\n                <a onClick={handleAddToCart}>\r\n                  <ShoppingCartOutlined />\r\n                </a>\r\n              </Tooltip>\r\n              ,\r\n              Add to cart\r\n            </>,\r\n            <a onClick={handleAddToWishlist}>\r\n              <HeartOutlined />\r\n              <br /> Add to wishlist\r\n            </a>,\r\n            <RatingModal>\r\n              <StarRating\r\n                name={_id}\r\n                numberOfStars={5}\r\n                rating={star}\r\n                changeRating={onStarClick}\r\n                isSelectable={true}\r\n                starRatedColor=\"orange\"\r\n              ></StarRating>\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          <ProductListItems product={product} />\r\n        </Card>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductListItems.js",["382","383","384"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductListItems = ({ product }) => {\r\n  const { description, slug, price, category, subs, shipping, brand, color, sold, quantity } = product;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <li className=\"list-group-item\">\r\n        Price{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          ${price}\r\n        </span>\r\n      </li>\r\n      {category && (\r\n        <li className=\"list-group-item\">\r\n          Category{\" \"}\r\n          <Link\r\n            to={`/category/${category.slug}`}\r\n            className=\"label label-default label-pill pull-xs-right\"\r\n          >\r\n            {category.name}\r\n          </Link>\r\n        </li>\r\n      )}\r\n      {subs && (\r\n            <li className='list-group-item'>\r\n              Sub Categories\r\n              {subs && subs.map(s => (\r\n                  <Link key={s._id} to={`/sub/${s.slug}`} className=\"label label-default label-pill pull-xs-right\">\r\n                    {s.slug}\r\n                  </Link>\r\n              ))}\r\n            </li>\r\n      )}\r\n      <li className=\"list-group-item\">\r\n        Shipping{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          {shipping}\r\n        </span>\r\n      </li>\r\n      <li className=\"list-group-item\">\r\n        Color{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          {color}\r\n        </span>\r\n      </li>\r\n      <li className=\"list-group-item\">\r\n        Brand{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          {brand}\r\n        </span>\r\n      </li>\r\n      <li className=\"list-group-item\">\r\n        Available{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          {quantity}\r\n        </span>\r\n      </li>\r\n      <li className=\"list-group-item\">\r\n        Sold{\" \"}\r\n        <span className=\"label label-default label-pill pull-xs-right\">\r\n          {sold}\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProductListItems;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\modal\\RatingModal.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\rating.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\category\\CategoryList.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\category\\CategoryHome.js",["385"],"import React, { useEffect, useState } from \"react\";\r\nimport { getCategory } from \"../../functions/category\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst CategoryHome = ({ match }) => {\r\n  const [category, setCategory] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCategory(slug, user.token).then((res) => {\r\n      setCategory(res.data.category);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        <Col span={24} >\r\n          {loading ? (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              {products.length} Product{products.length > 1 ? 's' : ''} in {category.name} category\r\n            </h4>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Divider/>\r\n      <Grid container spacing={3}>\r\n              {products && products.map(p => (\r\n              <ProductCard key={p._id} product={p} />\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryHome;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\sub\\SubHome.js",["386"],"import React, { useEffect, useState } from \"react\";\r\nimport { getSub } from \"../../functions/sub\";\r\nimport ProductCard from \"../../components/cards/ProductCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row, Col, Divider } from \"antd\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst SubHome = ({ match }) => {\r\n  const [sub, setSub] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getSub(slug, user.token).then((res) => {\r\n      console.log(res.data)\r\n      setSub(res.data.sub);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        <Col span={24} >\r\n          {loading ? (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\r\n              {products.length} Product{products.length > 1 ? 's' : ''} in {sub.name} category\r\n            </h4>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Divider/>\r\n      <Grid container spacing={3}>\r\n              {products && products.map(p => (\r\n              <ProductCard key={p._id} product={p} />\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubHome;","C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\searchReducer.js",[],["387","388"],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\Search.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\sub\\SubList.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Shop.js",["389","390","391","392","393"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getProductsByCount,\r\n  fetchProductsByFilter,\r\n} from \"../functions/product\";\r\nimport { getCategories } from \"../functions/category\";\r\nimport { getSubs } from \"../functions/sub\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Slider, Divider, Checkbox, Radio } from \"antd\";\r\nimport {\r\n  DollarOutlined,\r\n  DownSquareOutlined,\r\n  StarOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ProductCard from \"../components/cards/ProductCard\";\r\nimport Star from \"../components/forms/Star\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [price, setPrice] = useState([0, 0]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [ok, setOk] = useState(false);\r\n  const [categoryIds, setCategoryIds] = useState([]);\r\n  const [star, setStar] = useState(\"\");\r\n  const [subs, setSubs] = useState([]);\r\n  const [sub, setSub] = useState(\"\");\r\n  const [brands, setBrands] = useState([\r\n    \"Apple\",\r\n    \"Sumsung\",\r\n    \"Microsoft\",\r\n    \"Lenovo\",\r\n    \"Asus\",\r\n  ]);\r\n  const [brand, setBrand] = useState(\"\");\r\n\r\n  const [colors, setColors] = useState([\r\n    \"Black\",\r\n    \"Brown\",\r\n    \"Silver\",\r\n    \"White\",\r\n    \"Blue\",\r\n  ]);\r\n\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  const [shipping, setShipping] = useState(\"\");\r\n\r\n  const { search } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const { text } = search;\r\n\r\n  //1)LOAD PRODUCTS BY DEFAULT ON PAGE LOAD\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n    fetchCategories();\r\n    getSubs()\r\n      .then((res) => {\r\n        setSubs(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true);\r\n    getProductsByCount(10).then((res) => {\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const filterProducts = (arg) => {\r\n    fetchProductsByFilter(arg).then((res) => {\r\n      setProducts(res.data);\r\n    });\r\n  };\r\n\r\n  const fetchCategories = () => {\r\n    getCategories().then((res) => {\r\n      setCategories(res.data);\r\n    });\r\n  };\r\n\r\n  //2)LOAD PRODUCTS ON USER SEARCH INPUT\r\n  useEffect(() => {\r\n    const delayed = setTimeout(() => {\r\n      filterProducts({ query: text });\r\n    }, 300);\r\n    if (!text) {\r\n      loadAllProducts();\r\n    }\r\n    return () => clearTimeout(delayed);\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    if (!text) {\r\n      loadAllProducts();\r\n    }\r\n  }, [text]);\r\n\r\n  //3)LOAD PRODUCTS BASED ON PRICE\r\n\r\n  useEffect(() => {\r\n    filterProducts({ price });\r\n  }, [ok]);\r\n\r\n  const handleSlider = (val) => {\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    setPrice(val);\r\n    setTimeout(() => {\r\n      setOk(!ok);\r\n    }, 300);\r\n  };\r\n\r\n  //4)LOAD PRODUCTS BASED ON CATEGORIES\r\n  //show categories in a list of checkbox\r\n\r\n  const showCategories = () =>\r\n    categories.map((cat) => (\r\n      <div key={cat._id}>\r\n        <Checkbox\r\n          className=\"pb-2 pr-4 pl-4\"\r\n          value={cat._id}\r\n          checked={categoryIds.includes(cat._id) ? true : false}\r\n          onChange={handleChecked}\r\n        >\r\n          {cat.name}{\" \"}\r\n        </Checkbox>\r\n        <br />\r\n      </div>\r\n    ));\r\n\r\n  //handle check for categories\r\n\r\n  const handleChecked = (evt) => {\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n\r\n    setPrice([0, 0]);\r\n    setStar(\"\");\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    const newIds = [...categoryIds];\r\n\r\n    const val = evt.target.value;\r\n\r\n    const newState = new Set(newIds);\r\n\r\n    if (!newState.has(val)) {\r\n      newState.add(val);\r\n    } else {\r\n      newState.delete(val);\r\n    }\r\n\r\n    const newArray = Array.from(newState);\r\n    setCategoryIds(newArray);\r\n\r\n    filterProducts({ category: newArray });\r\n  };\r\n\r\n  //SHOW PRODUCTSBY STAR RATING\r\n\r\n  const handleStarClick = (num) => {\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setSub(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n\r\n    setStar(num);\r\n    filterProducts({ stars: num });\r\n  };\r\n\r\n  const showStars = () => (\r\n    <>\r\n      <div className=\"pr-4 pl-4 pb-2\">\r\n        <Star starClicked={handleStarClick} numStars={5} />\r\n      </div>\r\n\r\n      <div className=\"pr-4 pl-4 pb-2\">\r\n        <Star starClicked={handleStarClick} numStars={4} />\r\n      </div>\r\n\r\n      <div className=\"pr-4 pl-4 pb-2\">\r\n        <Star starClicked={handleStarClick} numStars={3} />\r\n      </div>\r\n\r\n      <div className=\"pr-4 pl-4 pb-2\">\r\n        <Star starClicked={handleStarClick} numStars={2} />\r\n      </div>\r\n\r\n      <div className=\"pr-4 pl-4 pb-2\">\r\n        <Star starClicked={handleStarClick} numStars={1} />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  //6.SHOW PRODUCTS BY SUB CATEGORIES\r\n\r\n  const showSubs = () =>\r\n    subs.map((s) => (\r\n      <div\r\n        key={s._id}\r\n        onClick={() => handleSubClick(s)}\r\n        className=\"p-1 m-1 badge badge-primary\"\r\n        style={{ cursor: \"pointer\" }}\r\n      >\r\n        {s.name}\r\n      </div>\r\n    ));\r\n\r\n  const handleSubClick = (s) => {\r\n    setSub(s);\r\n\r\n    filterProducts({ sub: s._id });\r\n\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n  };\r\n\r\n  //7.SHOW PRODUCTS BASED ON BRAND\r\n\r\n  const showBrands = () =>\r\n    brands.map((b) => (\r\n      <Radio\r\n        key={b}\r\n        value={b}\r\n        checked={b === brand}\r\n        onChange={handleBrand}\r\n        className=\"pb-1 pl-4 pr-5\"\r\n      >\r\n        {b}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleBrand = (evt) => {\r\n    setBrand(evt.target.value);\r\n\r\n    filterProducts({ brand: evt.target.value });\r\n\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setColor(\"\");\r\n    setShipping(\"\");\r\n  };\r\n\r\n  //SHOW PRODUCTS BASED ON COLORS\r\n\r\n  const showColors = () =>\r\n    colors.map((col) => (\r\n      <Radio\r\n        key={col}\r\n        value={col}\r\n        checked={col === color}\r\n        onChange={handleColor}\r\n        className=\"pb-1 pl-4 pr-5\"\r\n      >\r\n        {col}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleColor = (evt) => {\r\n    setColor(evt.target.value);\r\n\r\n    filterProducts({ color: evt.target.value });\r\n\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setBrand(\"\");\r\n    setShipping(\"\");\r\n  };\r\n\r\n  //9.SHOW PRODUCTS BASED ON SHIPPING yes/no\r\n\r\n  const showShipping = () => (\r\n    <>\r\n      <Checkbox\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        onChange={handleShipping}\r\n        value=\"Yes\"\r\n        checked={shipping === \"Yes\"}\r\n      >\r\n        Yes\r\n      </Checkbox>\r\n\r\n      <Checkbox\r\n        className=\"pb-2 pl-4 pr-4\"\r\n        onChange={handleShipping}\r\n        value=\"No\"\r\n        checked={shipping === \"No\"}\r\n      >\r\n        No\r\n      </Checkbox>\r\n    </>\r\n  );\r\n\r\n  const handleShipping = (evt) => {\r\n    setShipping(evt.target.value);\r\n\r\n    filterProducts({ shipping: evt.target.value });\r\n\r\n    dispatch({\r\n      type: \"SEARCH_QUERY\",\r\n      payload: { text: \"\" },\r\n    });\r\n    setPrice([0, 0]);\r\n    setSub(\"\");\r\n    setCategoryIds([]);\r\n    setStar(\"\");\r\n    setBrand(\"\");\r\n    setColor(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ overflow: \"hidden\" }}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item container>\r\n          <Grid item container direction=\"column\" md={3}>\r\n            <Grid item style={{ paddingTop: \"1rem\" }}>\r\n              <Typography variant=\"h5\" align=\"center\">\r\n                Search/Filters\r\n              </Typography>\r\n            </Grid>\r\n            <Divider />\r\n            <Grid item>\r\n              <Menu\r\n                defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]}\r\n                mode=\"inline\"\r\n              >\r\n                {/* 1) PRICE */}\r\n                <SubMenu\r\n                  key=\"1\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DollarOutlined />\r\n                      Price\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Slider\r\n                      className=\"ml-4 mr-4\"\r\n                      tipFormatter={(val) => `$${val}`}\r\n                      range\r\n                      max=\"6000\"\r\n                      value={price}\r\n                      onChange={handleSlider}\r\n                    />\r\n                  </div>\r\n                </SubMenu>\r\n                {/* 2)CATEGORIES */}\r\n                <SubMenu\r\n                  key=\"2\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DownSquareOutlined />\r\n                      Categories\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div>{showCategories()}</div>\r\n                </SubMenu>\r\n                <SubMenu\r\n                  key=\"3\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <StarOutlined />\r\n                      Rating\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div>{showStars()}</div>\r\n                </SubMenu>\r\n                {/* SUBCATEGORIES */}\r\n                <SubMenu\r\n                  key=\"4\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DownSquareOutlined />\r\n                      Sub Categories\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div className=\"pl-4 pr-4\">{showSubs()}</div>\r\n                </SubMenu>\r\n                {/* BRANDS */}\r\n                <SubMenu\r\n                  key=\"5\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DownSquareOutlined />\r\n                      Brands\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div className=\"pr-4\">{showBrands()}</div>\r\n                </SubMenu>\r\n                {/* COLORS */}\r\n                <SubMenu\r\n                  key=\"6\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DownSquareOutlined />\r\n                      Colors\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div className=\"pr-4\">{showColors()}</div>\r\n                </SubMenu>\r\n                {/* SHIPPING */}\r\n                <SubMenu\r\n                  key=\"7\"\r\n                  title={\r\n                    <span className=\"h6\">\r\n                      <DownSquareOutlined />\r\n                      Shipping\r\n                    </span>\r\n                  }\r\n                >\r\n                  <div className=\"pr-4\">{showShipping()}</div>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container md={9}>\r\n            {loading ? (\r\n              <h4 className=\"text-danger\">Loading...</h4>\r\n            ) : (\r\n              <h4\r\n                className=\"text-danger\"\r\n                style={{ paddingTop: \"1rem\", margin: \"0 auto\" }}\r\n              >\r\n                Products\r\n              </h4>\r\n            )}\r\n            {!products.length && (\r\n              <h5 style={{ color: \"red\", margin: \"0 auto\" }}>\r\n                No products found\r\n              </h5>\r\n            )}\r\n            <Grid item container spacing={2} style={{ paddingTop: \"2rem\" }}>\r\n              {products.map((p) => (\r\n                <ProductCard key={p._id} product={p} />\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\forms\\Star.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\cartReducer.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Cart.js",["394"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Divider } from \"antd\";\r\nimport ProductCardInCheckout from \"../components/cards/ProductCardInCheckout\";\r\nimport { userCart } from \"../functions/user\";\r\n\r\nconst Cart = ({ history }) => {\r\n  const { cart, user } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const getTotal = () => {\r\n    return cart.reduce((current, next) => {\r\n      return current + next.count * next.price;\r\n    }, 0);\r\n  };\r\n\r\n  const saveOrderToDB = () => {\r\n    userCart(cart, user.token)\r\n      .then((res) => {\r\n        if (res.data.ok) history.push(\"/checkout\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const showCartItems = () => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n          <th scope=\"col\">Remove</th>\r\n        </tr>\r\n      </thead>\r\n      {cart.map((p) => (\r\n        <ProductCardInCheckout key={p._id} p={p} />\r\n      ))}\r\n    </table>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>\r\n            Cart / {cart.length} Product{cart.length > 1 ? \"s\" : \"\"}{\" \"}\r\n          </h4>\r\n          {!cart.length ? (\r\n            <h4>\r\n              No products in cart. <Link to=\"/shop\">Continue Shopping</Link>\r\n            </h4>\r\n          ) : (\r\n            showCartItems()\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <h4>Order Summary</h4>\r\n          <Divider />\r\n          <p>Products</p>\r\n          {cart.map((cat, i) => (\r\n            <div key={i}>\r\n              <p>\r\n                {cat.title} x {cat.count} = ${cat.price * cat.count}{\" \"}\r\n              </p>\r\n            </div>\r\n          ))}\r\n          <Divider />\r\n          Total: <b style={{ color: \"red\" }}>${getTotal()}</b>\r\n          <Divider />\r\n          {user ? (\r\n            <button\r\n              onClick={saveOrderToDB}\r\n              disabled={!cart.length}\r\n              className=\"btn btn-sm btn-primary mt-2\"\r\n            >\r\n              Proceed to checkout\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn btn-sm btn-primary mt-2\">\r\n              <Link to={{ pathname: \"login\", state: { from: \"cart\" } }}>\r\n                Login to checkout\r\n              </Link>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ProductCardInCheckout.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\drawerReducer.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\drawer\\SideDrawer.js",["395"],"import React from \"react\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport laptop from \"../../images/laptop.png\";\r\n\r\nconst imageStyle = {\r\n  width: \"100%\",\r\n  height: 50,\r\n  objectFit: \"cover\",\r\n};\r\n\r\nconst SideDrawer = () => {\r\n  const dispatch = useDispatch();\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\r\n  return (\r\n    <Drawer\r\n      className=\"text-center\"\r\n      title={`Cart / ${cart.length} Product`}\r\n      onClose={() =>\r\n        dispatch({\r\n          type: \"SET_VISIBLE\",\r\n          payload: false,\r\n        })\r\n      }\r\n      visible={drawer}\r\n    >\r\n      {cart.map((p) => (\r\n        <div key={p._id} className=\"row\">\r\n          <div className=\"col\">\r\n            {p.images.length ? (\r\n              <>\r\n                <img src={p.images[0].url} alt={p.title} style={imageStyle} />\r\n                <p\r\n                  style={{ color: \"gold\", backgroundColor: \"teal\" }}\r\n                  className=\"text-center bg-primary\"\r\n                >\r\n                  {p.title} x {p.count}{\" \"}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <img src={laptop} alt={p.title} style={imageStyle} />\r\n                <p\r\n                  style={{ color: \"gold\", backgroundColor: \"teal\" }}\r\n                  className=\"text-center \"\r\n                >\r\n                  {p.title} x {p.count}{\" \"}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <Link to=\"/cart\">\r\n        <button\r\n          onClick={() =>\r\n            dispatch({\r\n              type: \"SET_VISIBLE\",\r\n              payload: false,\r\n            })\r\n          }\r\n          className=\"text-center btn btn-primary btn-raised btn-block\"\r\n        >Go to cart</button>\r\n      </Link>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Checkout.js",["396"],"import React, { useState, useEffect } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  getUserCart,\r\n  emptyUserCart,\r\n  saveUserAddress,\r\n  applyCoupon,\r\n} from \"../functions/user\";\r\n\r\n//products, cartTotal, totalAfterDiscount\r\n\r\nconst Checkout = ({history}) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n  const [coupon, setCoupon] = useState(\"\");\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [discountError, setDiscountError] = useState(\"\");\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    getUserCart(user.token).then((res) => {\r\n      setProducts(res.data.products);\r\n      setTotal(res.data.cartTotal);\r\n    });\r\n  }, []);\r\n\r\n  const handleEmptyCart = () => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: [],\r\n    });\r\n\r\n    setTotalAfterDiscount(0);\r\n    setCoupon('')\r\n\r\n    emptyUserCart(user.token).then((res) => {\r\n      setProducts([]);\r\n      setTotal(0);\r\n      toast.success(\"Cart is empty. Continue shopping\");\r\n    });\r\n  };\r\n\r\n  const saveAddressToDB = () => {\r\n    saveUserAddress(address, user.token).then((res) => {\r\n      if (res.data.ok) {\r\n        setAddressSaved(true);\r\n        toast.success(\"Address saved\");\r\n      }\r\n    });\r\n  };\r\n  const showAddress = () => (\r\n    <>\r\n      <ReactQuill theme=\"snow\" onChange={setAddress} />\r\n      <button onClick={saveAddressToDB} className=\"btn btn-primary mt-2\">\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const showProductSummary = () =>\r\n    products.map((p, i) => (\r\n      <div key={i}>\r\n        <p>\r\n          {p.product.title} ({p.color}) x {p.count} ={\" \"}\r\n          {p.product.price * p.count}{\" \"}\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n  const applyDiscountCoupon = () => {\r\n    applyCoupon(coupon, user.token).then((res) => {\r\n      if (res.data.err) {\r\n        setDiscountError(res.data.err);\r\n        setTotalAfterDiscount(0);\r\n        dispatch({\r\n          type: 'COUPON_APPLIED',\r\n          payload: true\r\n        })\r\n      } else {\r\n        setTotalAfterDiscount(res.data);\r\n        dispatch({\r\n          type: 'COUPON_APPLIED',\r\n          payload: true\r\n        })\r\n        setDiscountError(\"\");\r\n\r\n        //push the totalAfterDiscount to redux store true or false\r\n      }\r\n    });\r\n  };\r\n\r\n  const showApplyCoupon = () => (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        value={coupon}\r\n        onChange={(evt) => {\r\n          setCoupon(evt.target.value);\r\n          setDiscountError(\"\");\r\n          setTotalAfterDiscount(0)\r\n        }}\r\n      />\r\n      <button onClick={applyDiscountCoupon} className=\"btn btn-primary mt-2\">\r\n        Apply\r\n      </button>\r\n    </>\r\n  );\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <h4>Delivery Address</h4>\r\n        <br />\r\n        <br />\r\n        {showAddress()}\r\n        <hr />\r\n        <h4>Got Coupon?</h4>\r\n        <br />\r\n        {showApplyCoupon()}\r\n        <br />\r\n        <br />\r\n        {discountError && <p className=\"bg-danger p-2\">{discountError}</p>}\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Order Summary</h4>\r\n        <hr />\r\n        <p>Products {products.length} </p>\r\n        <hr />\r\n        <div>{showProductSummary()}</div>\r\n        <p>\r\n          Cart Total:{\" \"}\r\n          <span style={{ color: \"orange\", fontWeight: \"700\" }}>${total}</span>\r\n        </p>\r\n        {totalAfterDiscount > 0 && (\r\n          <p className=\"bg-success p-2\">Discount applied: Total payable ${totalAfterDiscount}</p>\r\n        )}\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <button onClick={() => history.push('/payment')} disabled={!addressSaved} className=\"btn btn-primary\">\r\n              Place Order\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <button\r\n              disabled={!products.length}\r\n              onClick={handleEmptyCart}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\user.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\admin\\coupon\\CreateCoupon.js",["397"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  getCoupons,\r\n  createCoupon,\r\n  removeCoupon,\r\n} from \"../../../functions/coupon\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport AdminNav from \"../../../components/nav/AdminNav\";\r\n\r\nconst CreateCoupon = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [expiry, setExpiry] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [coupons, setCoupons] = useState([]);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    setLoading(true);\r\n    createCoupon({ name, expiry, discount }, user.token)\r\n      .then((res) => {\r\n        loadCoupons();\r\n        setLoading(false);\r\n        setName(\"\");\r\n        setDiscount(\"\");\r\n        setExpiry(\"\");\r\n        toast.success(`\"${res.data.name}\" is created`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCoupons();\r\n  }, []);\r\n\r\n  const loadCoupons = () => {\r\n    getCoupons().then((res) => {\r\n      setCoupons(res.data);\r\n    });\r\n  };\r\n\r\n  const handleRemove = (couponId) => {\r\n    if (window.confirm(\"Delete\")) {\r\n      removeCoupon(couponId, user.token)\r\n        .then((res) => {\r\n          loadCoupons();\r\n          toast.warning(`coupon ${res.data.name} deleted`);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className=\"col-md-10\">\r\n          {loading ? (\r\n            <h4 className=\"text-danger\">Loading...</h4>\r\n          ) : (\r\n            <h4>Coupon</h4>\r\n          )}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-muted\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(evt) => setName(evt.target.value)}\r\n                value={name}\r\n                autoFocus\r\n                required\r\n              />\r\n\r\n              <label className=\"text-muted\">Discount %</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                onChange={(evt) => setDiscount(evt.target.value)}\r\n                value={discount}\r\n                required\r\n              />\r\n\r\n              <label className=\"text-muted\">Expiry</label>\r\n              <br />\r\n              <DatePicker\r\n                className=\"form-control\"\r\n                selected={new Date()}\r\n                value={expiry}\r\n                onChange={(date) => setExpiry(date)}\r\n              />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Save\r\n            </button>\r\n          </form>\r\n          <br />\r\n          <table className=\"table table-bordered\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Expiry</th>\r\n                <th scope=\"col\">Discount</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {coupons.map((coupon) => (\r\n                <tr key={coupon._id}>\r\n                  <td>{coupon.name} </td>\r\n                  <td>{new Date(coupon.expiry).toLocaleDateString()} </td>\r\n                  <td>{coupon.discount} </td>\r\n                  <td className=\"text-danger pointer\">\r\n                    <DeleteOutlined onClick={() => handleRemove(coupon._id)} />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCoupon;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\coupon.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\reducers\\couponReducer.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\pages\\Payment.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\StripeCheckout.js",["398"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPaymentIntent } from \"../functions/stripe\";\r\nimport { Card } from \"antd\";\r\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\r\nimport { createOrder, emptyUserCart } from '../functions/user';\r\nimport laptop from \"../images/laptop.png\";\r\n\r\nconst cardStyle = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: \"Arial, sans-serif\",\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#32325d\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\n\r\nconst StripeCheckout = () => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [payable, setPayable] = useState(0);\r\n\r\n  const { user, coupons } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    if (user.token) {\r\n      createPaymentIntent(user.token, coupons).then((res) => {\r\n        setClientSecret(res.data.clientSecret);\r\n        setCartTotal(res.data.cartTotal);\r\n        setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n        setPayable(res.data.payable);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: evt.target.name.value,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      //HERE YOU GET RESULTS AFTER SUCCESSFUL PAYMENT\r\n      //THEN CREATE ORDER AND SAVE IN THE DATABASE FOR THE ADMIN TO PROCESS\r\n      createOrder(payload, user.token).then(res => {\r\n          if (res.data.ok) {\r\n              //empty cart from local storage\r\n              if (typeof window !== 'undefined') {\r\n                  localStorage.removeItem('cart');\r\n              }\r\n\r\n              //empty cart from redux store\r\n              dispatch({\r\n                  type: 'ADD_TO_CART',\r\n                  payload: []\r\n              });\r\n\r\n              dispatch({\r\n                  type: 'COUPON_APPLIED',\r\n                  payload: false\r\n              })\r\n\r\n              emptyUserCart(user.token)\r\n\r\n              //empty cart from database\r\n          }\r\n      }).catch()\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (evt) => {\r\n    setDisabled(evt.empty);\r\n    setError(evt.error ? evt.error.message : \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!succeeded && (\r\n        <div>\r\n          {coupons && totalAfterDiscount !== undefined ? (\r\n            <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\r\n          ) : (\r\n            <p className=\"alert alert-danger\">No coupon applied</p>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"text-center pb-5\">\r\n        <Card\r\n          cover={\r\n            <img\r\n              src={laptop}\r\n              alt=\"laptop\"\r\n              style={{\r\n                height: \"200px\",\r\n                objectFit: \"cover\",\r\n                marginBottom: \"-50px\",\r\n              }}\r\n            />\r\n          }\r\n          actions={[\r\n            <>\r\n              <DollarOutlined className=\"text-info\" />\r\n              <br />\r\n              Total: ${cartTotal}\r\n            </>,\r\n            <>\r\n              <CheckOutlined className=\"text-info\" />\r\n              <br />\r\n              Total payable: ${(payable / 100).toFixed(2)}\r\n            </>,\r\n          ]}\r\n        ></Card>\r\n      </div>\r\n      <form id=\"payment-form\" className=\"strip-form\" onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id=\"card-element\"\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          className=\"stripe-button\"\r\n          disabled={processing || disabled || succeeded}\r\n        >\r\n          <span id=\"button-text\">\r\n            {processing ? <div className=\"spinner\"></div> : \"Pay\"}\r\n          </span>\r\n        </button>\r\n        <br />\r\n        {error && (\r\n          <div className=\"card-error\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\r\n          Payment Successful.{\" \"}\r\n          <Link to=\"/user/history\">See it in your purchase history.</Link>{\" \"}\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","C:\\Users\\hp\\ecommerce\\client\\src\\functions\\stripe.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Invoice.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Orders.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\components\\order\\Order.js",[],"C:\\Users\\hp\\ecommerce\\client\\src\\functions\\admin.js",[],{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","replacedBy":"402"},{"ruleId":"399","replacedBy":"403"},{"ruleId":"401","replacedBy":"404"},{"ruleId":"399","replacedBy":"405"},{"ruleId":"401","replacedBy":"406"},{"ruleId":"399","replacedBy":"407"},{"ruleId":"401","replacedBy":"408"},{"ruleId":"399","replacedBy":"409"},{"ruleId":"401","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":32,"column":8,"nodeType":"413","endLine":32,"endColumn":10,"suggestions":"414"},{"ruleId":"399","replacedBy":"415"},{"ruleId":"401","replacedBy":"416"},{"ruleId":"399","replacedBy":"417"},{"ruleId":"401","replacedBy":"418"},{"ruleId":"399","replacedBy":"419"},{"ruleId":"401","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":19,"column":5,"nodeType":"423","messageId":"424","endLine":19,"endColumn":13},{"ruleId":"421","severity":1,"message":"425","line":20,"column":5,"nodeType":"423","messageId":"424","endLine":20,"endColumn":10},{"ruleId":"421","severity":1,"message":"426","line":22,"column":5,"nodeType":"423","messageId":"424","endLine":22,"endColumn":10},{"ruleId":"421","severity":1,"message":"427","line":24,"column":5,"nodeType":"423","messageId":"424","endLine":24,"endColumn":11},{"ruleId":"421","severity":1,"message":"428","line":6,"column":10,"nodeType":"423","messageId":"424","endLine":6,"endColumn":14},{"ruleId":"421","severity":1,"message":"429","line":7,"column":10,"nodeType":"423","messageId":"424","endLine":7,"endColumn":17},{"ruleId":"421","severity":1,"message":"430","line":9,"column":10,"nodeType":"423","messageId":"424","endLine":9,"endColumn":23},{"ruleId":"411","severity":1,"message":"431","line":46,"column":6,"nodeType":"413","endLine":46,"endColumn":8,"suggestions":"432"},{"ruleId":"421","severity":1,"message":"433","line":23,"column":5,"nodeType":"423","messageId":"424","endLine":23,"endColumn":9},{"ruleId":"421","severity":1,"message":"427","line":28,"column":5,"nodeType":"423","messageId":"424","endLine":28,"endColumn":11},{"ruleId":"399","replacedBy":"434"},{"ruleId":"401","replacedBy":"435"},{"ruleId":"411","severity":1,"message":"436","line":19,"column":6,"nodeType":"413","endLine":19,"endColumn":8,"suggestions":"437"},{"ruleId":"421","severity":1,"message":"428","line":13,"column":10,"nodeType":"423","messageId":"424","endLine":13,"endColumn":14},{"ruleId":"411","severity":1,"message":"438","line":42,"column":6,"nodeType":"413","endLine":42,"endColumn":8,"suggestions":"439"},{"ruleId":"399","replacedBy":"440"},{"ruleId":"401","replacedBy":"441"},{"ruleId":"421","severity":1,"message":"442","line":20,"column":11,"nodeType":"423","messageId":"424","endLine":20,"endColumn":15},{"ruleId":"421","severity":1,"message":"443","line":20,"column":17,"nodeType":"423","messageId":"424","endLine":20,"endColumn":21},{"ruleId":"444","severity":1,"message":"445","line":87,"column":13,"nodeType":"446","endLine":87,"endColumn":75},{"ruleId":"421","severity":1,"message":"447","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":21},{"ruleId":"421","severity":1,"message":"448","line":5,"column":25,"nodeType":"423","messageId":"424","endLine":5,"endColumn":35},{"ruleId":"421","severity":1,"message":"449","line":4,"column":23,"nodeType":"423","messageId":"424","endLine":4,"endColumn":34},{"ruleId":"411","severity":1,"message":"450","line":14,"column":6,"nodeType":"413","endLine":14,"endColumn":8,"suggestions":"451"},{"ruleId":"421","severity":1,"message":"449","line":4,"column":23,"nodeType":"423","messageId":"424","endLine":4,"endColumn":34},{"ruleId":"411","severity":1,"message":"452","line":17,"column":8,"nodeType":"413","endLine":17,"endColumn":10,"suggestions":"453"},{"ruleId":"411","severity":1,"message":"454","line":20,"column":6,"nodeType":"413","endLine":20,"endColumn":8,"suggestions":"455"},{"ruleId":"411","severity":1,"message":"456","line":18,"column":8,"nodeType":"413","endLine":18,"endColumn":14,"suggestions":"457"},{"ruleId":"411","severity":1,"message":"456","line":18,"column":8,"nodeType":"413","endLine":18,"endColumn":14,"suggestions":"458"},{"ruleId":"421","severity":1,"message":"459","line":12,"column":3,"nodeType":"423","messageId":"424","endLine":12,"endColumn":9},{"ruleId":"421","severity":1,"message":"443","line":23,"column":17,"nodeType":"423","messageId":"424","endLine":23,"endColumn":21},{"ruleId":"444","severity":1,"message":"445","line":124,"column":17,"nodeType":"446","endLine":124,"endColumn":46},{"ruleId":"444","severity":1,"message":"445","line":131,"column":13,"nodeType":"446","endLine":131,"endColumn":46},{"ruleId":"421","severity":1,"message":"460","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"461","line":5,"column":11,"nodeType":"423","messageId":"424","endLine":5,"endColumn":22},{"ruleId":"421","severity":1,"message":"462","line":5,"column":24,"nodeType":"423","messageId":"424","endLine":5,"endColumn":28},{"ruleId":"411","severity":1,"message":"463","line":23,"column":6,"nodeType":"413","endLine":23,"endColumn":8,"suggestions":"464"},{"ruleId":"411","severity":1,"message":"463","line":24,"column":6,"nodeType":"413","endLine":24,"endColumn":8,"suggestions":"465"},{"ruleId":"399","replacedBy":"466"},{"ruleId":"401","replacedBy":"467"},{"ruleId":"421","severity":1,"message":"468","line":29,"column":10,"nodeType":"423","messageId":"424","endLine":29,"endColumn":14},{"ruleId":"421","severity":1,"message":"469","line":31,"column":10,"nodeType":"423","messageId":"424","endLine":31,"endColumn":13},{"ruleId":"421","severity":1,"message":"470","line":32,"column":18,"nodeType":"423","messageId":"424","endLine":32,"endColumn":27},{"ruleId":"421","severity":1,"message":"471","line":41,"column":18,"nodeType":"423","messageId":"424","endLine":41,"endColumn":27},{"ruleId":"411","severity":1,"message":"472","line":110,"column":6,"nodeType":"413","endLine":110,"endColumn":10,"suggestions":"473"},{"ruleId":"421","severity":1,"message":"474","line":10,"column":9,"nodeType":"423","messageId":"424","endLine":10,"endColumn":17},{"ruleId":"421","severity":1,"message":"475","line":2,"column":18,"nodeType":"423","messageId":"424","endLine":2,"endColumn":24},{"ruleId":"411","severity":1,"message":"476","line":33,"column":6,"nodeType":"413","endLine":33,"endColumn":8,"suggestions":"477"},{"ruleId":"421","severity":1,"message":"449","line":2,"column":23,"nodeType":"423","messageId":"424","endLine":2,"endColumn":34},{"ruleId":"411","severity":1,"message":"478","line":55,"column":6,"nodeType":"413","endLine":55,"endColumn":8,"suggestions":"479"},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],["480"],["481"],["480"],["481"],["480"],["481"],["480"],["481"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.","ArrayExpression",["482"],["480"],["481"],["480"],["481"],["480"],["481"],"no-unused-vars","'shipping' is assigned a value but never used.","Identifier","unusedVar","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'images' is assigned a value but never used.","'Spin' is defined but never used.","'Divider' is defined but never used.","'createProduct' is defined but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["483"],"'subs' is assigned a value but never used.",["480"],["481"],"React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["484"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["485"],["480"],["481"],"'user' is assigned a value but never used.","'cart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useSelector' is defined but never used.","'useHistory' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["486"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["487"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["488"],"React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["489"],["490"],"'getSub' is defined but never used.","'useEffect' is defined but never used.","'description' is assigned a value but never used.","'slug' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'slug' and 'user.token'. Either include them or remove the dependency array.",["491"],["492"],["480"],["481"],"'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["493"],"'dispatch' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has missing dependencies: 'coupons' and 'user.token'. Either include them or remove the dependency array.",["495"],"no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"510","fix":"512"},{"desc":"513","fix":"514"},{"desc":"513","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},"Update the dependencies array to be: [loadSub]",{"range":"522","text":"523"},"Update the dependencies array to be: [loadProduct]",{"range":"524","text":"525"},"Update the dependencies array to be: [loadUserOrders]",{"range":"526","text":"527"},"Update the dependencies array to be: [loadCategories]",{"range":"528","text":"529"},"Update the dependencies array to be: [loadWishlist]",{"range":"530","text":"531"},"Update the dependencies array to be: [loadOrders]",{"range":"532","text":"533"},"Update the dependencies array to be: [loadCategory]",{"range":"534","text":"535"},"Update the dependencies array to be: [loadProducts, page]",{"range":"536","text":"537"},{"range":"538","text":"537"},"Update the dependencies array to be: [slug, user.token]",{"range":"539","text":"540"},{"range":"541","text":"540"},"Update the dependencies array to be: [ok, price]",{"range":"542","text":"543"},"Update the dependencies array to be: [user.token]",{"range":"544","text":"545"},"Update the dependencies array to be: [coupons, user.token]",{"range":"546","text":"547"},[952,954],"[loadSub]",[1587,1589],"[loadProduct]",[656,658],"[loadUserOrders]",[1327,1329],"[loadCategories]",[510,512],"[loadWishlist]",[615,617],"[loadOrders]",[633,635],"[loadCategory]",[609,615],"[loadProducts, page]",[609,615],[804,806],"[slug, user.token]",[793,795],[2788,2792],"[ok, price]",[1051,1053],"[user.token]",[1796,1798],"[coupons, user.token]"]